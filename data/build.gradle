plugins {
    id 'com.android.library'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.vlatrof.rickandmorty.data'
    compileSdk build_versions.compileSdk

    def localPropertiesFile = rootProject.file("local.properties")
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(localPropertiesFile))

    defaultConfig {
        minSdk build_versions.minSdk
        targetSdk build_versions.targetSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BASE_URL", localProperties['baseUrl']
        buildConfigField "String", "DATABASE_NAME", localProperties['databaseName']
        buildConfigField "int", "PAGE_SIZE", localProperties['paginationPageSize']
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(path: ':domain')

    annotationProcessor "androidx.room:room-compiler:$deps_versions.room"
    kapt "androidx.room:room-compiler:$deps_versions.room"
    implementation "androidx.room:room-ktx:$deps_versions.room"
    api "androidx.room:room-runtime:$deps_versions.room"
    implementation "com.google.dagger:dagger:$deps_versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$deps_versions.dagger"
    implementation "com.squareup.okhttp3:logging-interceptor:$deps_versions.loggingInterceptor"
    implementation "com.squareup.retrofit2:converter-gson:$deps_versions.retrofit"
    implementation "com.squareup.retrofit2:retrofit:$deps_versions.retrofit"
}
